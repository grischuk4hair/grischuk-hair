import os
import asyncio
from fastapi import FastAPI, Response
import uvicorn
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
PORT = int(os.environ.get("PORT", 8000))

BOTT_URL = "https://forms.gle/Ut1eXu8P8fN1nbkv5"
BOT_URL = "https://forms.gle/1m7UdUy3u6rchxi4A"
WEBSITE_URL = "https://grischukhair.setmore.com/"

app = FastAPI()

@app.get("/")
async def root():
    return {"status": "Bot is running"}

@app.api_route("/health", methods=["GET", "HEAD"])
async def health_check():
    return Response(status_code=200)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π üòâ\n"
        "/zapis ‚Äì –∑–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥–∏\n"
        "/vopros ‚Äî –≤–æ–ø—Ä–æ—Å –º–∞—Å—Ç–µ—Ä—É\n"
        "/otzyv  ‚Äî –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –º–∞—Å—Ç–µ—Ä–∞\n"
        "/adres  ‚Äî –∞–¥—Ä–µ—Å —Å–∞–ª–æ–Ω–∞\n"
        "/uslugi ‚Äî —Å–ø–∏—Å–æ–∫ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥\n"
        "/kontakty ‚Äî –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–∞—Å—Ç–µ—Ä–∞\n"
        "/master ‚Äî –æ –º–∞—Å—Ç–µ—Ä–µ"
    )

async def zapis(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: {WEBSITE_URL}")

async def vopros(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∑–¥–µ—Å—å, –∏ –º–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏: {BOTT_URL}")

async def otzyv(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤: {BOT_URL}")

async def uslugi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚úÇÔ∏è –°–ø–∏—Å–æ–∫ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥:\n"
        "\n‚Ä¢ –ü–æ–¥—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å ‚Äî 40‚ÄØ—Ä\n"
        "‚Ä¢ –ú–æ–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∏–∂–∫–∞ ‚Äî 50‚ÄØ—Ä\n"
        "‚Ä¢ –ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞ ‚Äî 35‚ÄØ—Ä\n"
        "‚Ä¢ –î–µ—Ç—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞ (–¥–æ 12 –ª–µ—Ç) ‚Äî 25‚ÄØ—Ä\n"
        "‚Ä¢ –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–π ‚Äî 120‚ÄØ—Ä\n"
        "‚Ä¢ –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤ 1 —Ç–æ–Ω ‚Äî 140‚ÄØ—Ä\n"
        "‚Ä¢ –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ + —Å—Ç—Ä–∏–∂–∫–∞ ‚Äî 160‚ÄØ—Ä\n"
        "‚Ä¢ –ö–æ–Ω—Ç—É—Ä–∏–Ω–≥ (–∫–æ—Ä—Ä–µ–∫—Ü–∏—è AirTouch, —Ç–æ–Ω–∏—Ä–æ–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞) ‚Äî 200‚Äì250‚ÄØ—Ä\n"
        "‚Ä¢ AirTouch / —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ (—Ç–æ–Ω–∏—Ä–æ–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞) ‚Äî 320‚Äì380‚ÄØ—Ä\n"
        "‚Ä¢ –ú–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–Ω–∏—Ä–æ–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞) ‚Äî 180‚Äì250‚ÄØ—Ä\n"
        "\n–¢–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –∏ –≥—É—Å—Ç–æ—Ç—ã –≤–æ–ª–æ—Å."
    )

async def adres(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìç –≥. –ú–∏–Ω—Å–∫, —É–ª. –†–æ–º–∞–Ω–æ–≤—Å–∫–∞—è –°–ª–æ–±–æ–¥–∞, 9 (–∞–∫–∞–¥–µ–º–∏—è ¬´Lilac¬ª, –º. –§—Ä—É–Ω–∑–µ–Ω—Å–∫–∞—è)."
    )

async def kontakty(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω / Telegram / Viber: +375 (29) 695‚Äë72‚Äë22")

async def master(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üíá‚Äç‚ôÄÔ∏è –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ì—Ä–∏—â—É–∫ ‚Äî –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä‚Äë—É–Ω–∏–≤–µ—Ä—Å–∞–ª —Å –æ–±—à–∏—Ä–Ω—ã–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã!\n"
        "\n–†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –ø–æ —à–∞–±–ª–æ–Ω—É, –∞ –ø–æ–¥ –≤–∞—à –æ–±—Ä–∞–∑ –∏ —Å—Ç–∏–ª—å."
    )

application = ApplicationBuilder().token(TOKEN).build()

application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("zapis", zapis))
application.add_handler(CommandHandler("vopros", vopros))
application.add_handler(CommandHandler("otzyv", otzyv))
application.add_handler(CommandHandler("uslugi", uslugi))
application.add_handler(CommandHandler("adres", adres))
application.add_handler(CommandHandler("kontakty", kontakty))
application.add_handler(CommandHandler("master", master))

async def run_bot():
    # –£–¥–∞–ª—è–µ–º webhook (await!)
    await application.bot.delete_webhook(drop_pending_updates=True)
    await application.initialize()
    await application.start()
    await application.updater.start_polling()

async def run_api():
    config = uvicorn.Config(app, host="0.0.0.0", port=PORT, log_level="info")
    server = uvicorn.Server(config)
    await server.serve()

async def main():
    await asyncio.gather(run_bot(), run_api())

if __name__ == "__main__":
    asyncio.run(main())
